#include <iostream>

using namespace std;

void mergesort_helper(int* arr, const uint32_t p, const uint32_t q, const uint32_t r)
{
    uint32_t lower_len = q - p;
    uint32_t upper_len = r - q;
    int* lower = new int[lower_len];
    int* upper = new int[upper_len];
    
    for (int i = 0; i < lower_len; i++)
    {
        lower[i] = arr[i + p];
    }
    for (int j = 0; j < upper_len; j++)
    {
        upper[j] = arr[j + q];
    }
    int k = 0;
    i = 0;
    j = 0;
    while (i < lower_len && j < upper_len)
    {
        if (lower[i] < upper[j])
        {
            arr[k] = lower[i];
            i++;
        }
        else
        {
            arr[k] = upper[j];
            j++;
        }
    }
    delete lower;
    delete upper;
}

void mergesort(int* arr, uint32_t start_idx, uint32_t len)
{
    uint32_t size = len - start_idx;
    if (size < 2)
    {
        return;
    }
    if (size == 2)
    {
        if (arr[0] > arr[1])
        {
            int temp = arr[1];
            arr[1] = arr[0];
            arr[0] = temp;
        }
    }
    else
    {
        mergesort(arr, start_idx, size/2);
        mergesort(arr, size/2, len);
        mergesort_helper(arr, p, size/2, q);
    }
}

int main(int argc, char** argv)
{

}

